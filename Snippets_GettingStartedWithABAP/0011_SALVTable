REPORT znv_salv_table.

*=-=-=-=

CLASS lcl_report DEFINITION.
  PUBLIC SECTION.
    DATA:
      alv_table_object TYPE REF TO cl_salv_table,
      flights          TYPE STANDARD TABLE OF sflight.
    METHODS:
      get_data,
      present_data.

  PRIVATE SECTION.
    METHODS:
      set_default_functions,
      set_layout.
ENDCLASS.

*=-=-=-=

PARAMETERS:
    p_rows TYPE i OBLIGATORY.

START-OF-SELECTION.
  DATA(my_report) = NEW lcl_report( ).

  my_report->get_data( ).
  my_report->present_data( ).

*=-=-=-=

CLASS lcl_report IMPLEMENTATION.
  METHOD get_data.
    SELECT *
    FROM sflight
    INTO TABLE flights
    UP TO p_rows ROWS.
  ENDMETHOD.

  METHOD present_data.
    TRY.
        cl_salv_table=>factory(
        IMPORTING
        r_salv_table = alv_table_object
        CHANGING
        t_table = flights ).
      CATCH cx_salv_msg.
    ENDTRY.
    me->set_default_functions( ).
    me->set_layout( ).
    alv_table_object->display( ).
  ENDMETHOD.

  METHOD set_default_functions.
    DATA:
      functions TYPE REF TO cl_salv_functions_list.
    functions = alv_table_object->get_functions( ).
    functions->set_all( abap_true ).
  ENDMETHOD.

  METHOD set_layout.
    DATA:
      layout     TYPE REF TO cl_salv_layout,
      layout_key TYPE salv_s_layout_key.
    layout = alv_table_object->get_layout( ).
    layout_key-report = sy-repid.
    layout->set_key( layout_key ).
    layout->set_save_restriction( if_salv_c_layout=>restrict_none ).
  ENDMETHOD.
ENDCLASS.
