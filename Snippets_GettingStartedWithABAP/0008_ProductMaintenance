REPORT znv_product_mainten.

SELECTION-SCREEN BEGIN OF BLOCK product WITH FRAME TITLE TEXT-001.
  PARAMETERS:
    p_prod TYPE znv_product-product,
    p_desc TYPE znv_product-description LOWER CASE.
SELECTION-SCREEN END OF BLOCK product.

SELECTION-SCREEN BEGIN OF BLOCK action WITH FRAME TITLE TEXT-002.
  PARAMETERS:
    p_upd TYPE boolean RADIOBUTTON GROUP act, " add/update product
    p_rem TYPE boolean RADIOBUTTON GROUP act, " remove product
    p_dis TYPE boolean RADIOBUTTON GROUP act. " display products
SELECTION-SCREEN END OF BLOCK action.

DATA:
    product TYPE znv_product.

product-product = p_prod.
product-description = p_desc.

IF p_upd = abap_true.
  MODIFY znv_product FROM product.
  IF sy-subrc = 0.
    MESSAGE i001(znv_cart).
  ELSE.
    MESSAGE e006(znv_cart).
  ENDIF.

ELSEIF p_rem = abap_true.
  DELETE znv_product FROM product.
  IF sy-subrc = 0.
    MESSAGE i002(znv_cart).
  ELSE.
    MESSAGE e006(znv_cart).
  ENDIF.

ELSEIF p_dis = abap_true.
  SELECT product, description
  FROM znv_product
  INTO TABLE @DATA(products).

  cl_salv_table=>factory(
      IMPORTING r_salv_table = DATA(alv_table)
      CHANGING t_table = products ).

  alv_table->display( ).
ENDIF.

*=-=-=-= old syntax
*TYPES:
*  BEGIN OF t_product,
*    product     TYPE znv_product-product,
*    description TYPE znv_product-description,
*  END OF t_product.
*
*DATA:
*  product   TYPE znv_product,
*  products  TYPE STANDARD TABLE OF t_product,
*  alv_table TYPE REF TO cl_salv_table.
*
*...
*ELSEIF p_dis = abap_true.
*SELECT product description
*INTO TABLE products
*FROM znv_product.
*
*  cl_salv_table=>factory(
*      IMPORTING r_salv_table = alv_table
*      CHANGING t_table = products ).
*
*  alb_table->display( ).
*ENDIF.
